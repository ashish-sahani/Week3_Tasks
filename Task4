#include <iostream>
#include <map>

using namespace std;

class Theme {
public:
    string backgroundColor;
    string fontColor;
    int fontSize;
    string iconStyle;

    Theme(string bg, string font, int size, string icon)
        : backgroundColor(bg), fontColor(font), fontSize(size), iconStyle(icon) {}

    void applyTheme() const {
        cout << "Applying Theme:" << endl;
        cout << "Background: " << backgroundColor << ", Font: " << fontColor << ", Font Size: " << fontSize << ", Icon Style: " << iconStyle << endl;
    }

    void previewTheme() const {
        cout << "Previewing Theme:" << endl;
        cout << "Background: " << backgroundColor << ", Font: " << fontColor << ", Font Size: " << fontSize << ", Icon Style: " << iconStyle << endl;
    }
};

int main() {
    map<string, Theme> themes;
    themes["Classic"] = Theme("Black", "White", 12, "Classic Icons");
    themes["Sport"] = Theme("Red", "White", 14, "Sport Icons");
    themes["Eco"] = Theme("Green", "Black", 12, "Eco Icons");

    int choice;
    while (true) {
        cout << "Choose Theme:" << endl;
        cout << "1. Classic" << endl;
        cout << "2. Sport" << endl;
        cout << "3. Eco" << endl;
        cout << "Enter your choice (0 to exit): ";
        cin >> choice;

        if (choice == 0) {
            break;
        } else if (choice == 1) {
            themes["Classic"].previewTheme();
            themes["Classic"].applyTheme();
        } else if (choice == 2) {
            themes["Sport"].previewTheme();
            themes["Sport"].applyTheme();
        } else if (choice == 3) {
            themes["Eco"].previewTheme();
            themes["Eco"].applyTheme();
        } else {
            cout << "Invalid choice!" << endl;
        }
    }

    return 0;
}
